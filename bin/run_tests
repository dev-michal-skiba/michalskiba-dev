#!/bin/bash

modules=("$@")

if [ ${#modules[@]} -eq 0 ]; then
  env_files=($(find ./modules -type f -path "*/.env.test" | sort))
else
  env_files=()
  for module in "${modules[@]}"; do
    if [ -f "./modules/$module/.env.test" ]; then
      env_files+=("./modules/$module/.env.test")
    else
      echo -e "\033[0;91mModule '$module' not found or missing .env.test file\033[0m"
      exit 1
    fi
  done
fi

for env_file in "${env_files[@]}"; do
  source "$env_file"
  module_name=$(echo "$env_file" | sed -n 's|^./modules/\([^/]*\)/.*|\1|p')
  env_vars=""
  while IFS='=' read -r key value || [ -n "$key" ]; do
    [[ $key =~ ^#.*$ || -z $key ]] && continue
    env_vars="$env_vars $key=$value"
  done < "$env_file"
  bash_command="$env_vars python -m pytest -vv --cov=$module_name/tests $module_name/tests && python -m coverage report"
  echo -e "\n\033[0;94m==== $MODULE_NAME Tests ====\033[0m\n"
  docker compose --file test.docker-compose.yml run --rm api_test bash -c "$bash_command" || exit $?
done
